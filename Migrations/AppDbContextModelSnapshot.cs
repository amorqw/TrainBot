// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainBot.Data;

#nullable disable

namespace TrainBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TrainBot.Models.ExercisesTg", b =>
                {
                    b.Property<Guid>("TelegramId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exercise")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Repetitions")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("TelegramId");

                    b.ToTable("ExercisesTg");
                });

            modelBuilder.Entity("TrainBot.Models.UsersTg", b =>
                {
                    b.Property<Guid>("TelegramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TelegramId");

                    b.ToTable("UsersTg");
                });

            modelBuilder.Entity("TrainBot.Models.ExercisesTg", b =>
                {
                    b.HasOne("TrainBot.Models.UsersTg", "UsersTg")
                        .WithMany("ExercisesTg")
                        .HasForeignKey("TelegramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsersTg");
                });

            modelBuilder.Entity("TrainBot.Models.UsersTg", b =>
                {
                    b.Navigation("ExercisesTg");
                });
#pragma warning restore 612, 618
        }
    }
}
